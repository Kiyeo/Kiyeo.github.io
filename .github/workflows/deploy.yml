# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: "*"

jobs:
  testing:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - name: Cache node modules
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-build-${{ steps.yarn-cache-dir-path.outputs.dir }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ steps.yarn-cache-dir-path.outputs.dir }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: rm -rf node_modules && yarn install
      - name: Type checking
        run: yarn type
      - name: Run linting test
        run: yarn lint

  deploy:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: [testing]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: rm -rf node_modules && yarn install
      - name: Build
        run: |
          yarn run build
          yarn run export
          touch ./out/.nojekyll
      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@4.2.0
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: out # The folder the action should deploy.
